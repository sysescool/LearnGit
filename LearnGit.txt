初始化一个Git仓库:
git init

添加文件到Git仓库:
git add <file>
git commit -m <message>

检查仓库当前状态:
git status

查看文件修改不同:
git diff

生成ssh-key:
ssh-keygen -t rsa -C "xxx@example.com"

把git的本地仓库和Github仓库建立关系//github的path就是user_name
git remote add origin git@<server_name>:<path>/<repo_name>.git


把本地内容推送到远程仓库
/*
  由于远程库是空的，我们第一次推送master分支时，加上了-u参数，
  Git不但会把本地的master分支内容推送的远程新的master分支，
  还会把本地的master分支和远程的master分支关联起来，
  在以后的推送或者拉取时就可以简化命令。
*/
git push -u origin master		//第一次推送master分支的所有内容
git push origin master			//以后就可以使用该命令推送


从远程仓库, 克隆一个仓库:
git clone git@github.com:sysescool/DataStructure.git

创建dev分支, 切换dev分支
git branch dev
git checkout dev
//git checkout -b dev  // 创建并切换

查看当前分支和所有分支
git branch

合并指定分支到当前分支
git merge <branch_name>

删除指定分支
git branch -d <branch_name>

撤销某文件的修改:
git checkout -- <file>
切换dev分支:
git checkout <branch_name>
最新版切换分支:
git switch -c <branch_name>

分支冲突, 需要解决:
查看log:
git log
查看分支合并图:
git log --graph

git的快速合并分支会用Fast forward模式, 这种情况下, 删除分支后, 会丢掉分支信息.
禁用快速合并模式, merge时就会生成一个新的commit
git merge --no-ff -m "merge with no-ff" dev

暂时保存一下工作现场:
git stash

修复后, 还原工作现场:
git stash pop

复制一个特定的提交到当前分支:
git cherry-pick 4c805e2

丢弃一个没有被合并过的分支
git branch -D <name>


****
编辑git全局配置文件:
git config -e --global

添加http代理(全局):
git config --global http.proxy 'http://127.0.0.1:1080'

git在使用过程中, 会遇到换行符的问题,
参见https://blog.csdn.net/xuewuzhijin2012/article/details/50117181
我是在编译clang的时候遇到的这个问题:
git config --global core.autocrlf false






